{"version":3,"sources":["components/layout/spinner.gif","components/layout/Spinner.js","helper/Auth.js","reducers/notifyReducer.js","store.js","actions/types.js","reducers/settingsReducer.js","components/layout/AppNavBar.js","components/clients/Clients.js","components/layout/Sidebar.js","components/layout/Dashboard.js","components/clients/AddClient.js","components/clients/EditClient.js","components/clients/ClientDetails.js","actions/notifyActions.js","components/layout/Alert.js","components/auth/Login.js","components/settings/Settings.js","actions/settingActions.js","components/auth/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Spinner","react_default","a","createElement","src","spinner","alt","style","width","display","margin","locationHelper","locationHelperBuilder","UserIsAuthenticated","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","LoadingScreen","allowRedirectBack","redirectPath","state","ownProps","getRedirectQueryParam","authenticatingSelector","_ref","_ref$firebase","firebase","auth","isInitializing","profile","isLoaded","authenticatedSelector","_ref2","isEmpty","UserIsNotAuthenticated","_ref3","_ref3$firebase","_ref4","initialState","message","messageType","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","createStoreWithFirebase","compose","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","rootReducer","combineReducers","firebaseReducer","firestoreReducer","notify","arguments","length","undefined","action","type","Object","objectSpread","settings","disableBalanceOnAdd","payload","disableBalanceOnEdit","allowRegistration","localStorage","getItem","setItem","JSON","stringify","store","parse","window","__REDUX_DEVTOOLS_EXTENSION__","AppNavBar","isAuthenticated","onLogoutClick","e","preventDefault","_this","props","_this$props$auth","email","password","logout","catch","err","alert","this","className","react_router_dom","to","data-toggle","data-target","id","href","onClick","uid","Component","firebaseConnect","connect","Clients","totalOwed","clients","parseFloat","toFixed","map","client","key","firstName","lastName","balance","concat","reduce","total","toString","firestoreConnect","collection","ordered","Sidebar","Dashboard","clients_Clients","layout_Sidebar","AddClient","phone","onChange","setState","defineProperty","target","name","value","onSubmit","newClient","_this$props","history","add","then","push","_this$state","htmlFor","minLength","required","disabled","EditClient","updClient","update","doc","defaultValue","storeAs","match","params","ClientDetails","showBalanceForm","balanceUpdateAmount","updateClient","onDelete","_this$props2","delete","_this2","balanceForm","placeholder","classnames","text-danger","text-success","color","fontSize","notifyUser","Alert","alert-success","alert-danger","Login","login","_this$props$notify","layout_Alert","Settings","disableBalanceOnAddChange","setDisableBalanceOnAdd","disableBalanceOnEditChange","setDisableBalanceOnEdit","allowRegistrationChange","setAllowRegistration","_this$props$settings","checked","Register","createUser","App","es","basename","layout_AppNavBar","react_router","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.240a70e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.dfc0cda6.gif\";","import React from \"react\";\nimport spinner from \"./spinner.gif\";\n\nexport default function Spinner() {\n  return (\n    <div>\n      <img\n        src={spinner}\n        alt=\"Loading...\"\n        style={{ width: \"200px\", display: \"block\", margin: \"auto\" }}\n      />\n    </div>\n  );\n}\n","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\n//import createHistory from \"history/createBrowserHistory\";\nimport LoadingScreen from \"../components/layout/Spinner\"; // change it to your custom component\n\nconst locationHelper = locationHelperBuilder({});\n// const history = createHistory();\n\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  wrapperDisplayName: \"UserIsAuthenticated\",\n  AuthenticatingComponent: LoadingScreen,\n  allowRedirectBack: true,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || \"/login\",\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\n    !auth.isLoaded || isInitializing === true,\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    auth.isLoaded && !auth.isEmpty\n});\n\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  wrapperDisplayName: \"UserIsNotAuthenticated\",\n  AuthenticatingComponent: LoadingScreen,\n  allowRedirectBack: false,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || \"/\",\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\n    !auth.isLoaded || isInitializing === true,\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    auth.isLoaded && auth.isEmpty\n});\n\n//remove redirectAction because not in use\n","import { NOTIFY_USER } from \"../actions/types\";\n\nconst initialState = {\n  message: null,\n  messageType: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case NOTIFY_USER:\n      return {\n        ...state,\n        message: action.message,\n        messageType: action.messageType\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, compose } from \"redux\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport { reactReduxFirebase, firebaseReducer } from \"react-redux-firebase\";\nimport { reduxFirestore, firestoreReducer } from \"redux-firestore\";\n// Reducers\nimport notifyReducer from \"./reducers/notifyReducer\";\nimport settingsReducer from \"./reducers/settingsReducer\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBnEUQwd3x548XHOp964d-Ea-V5oHYHzEc\",\n  authDomain: \"reactclientpanel-a0811.firebaseapp.com\",\n  databaseURL: \"https://reactclientpanel-a0811.firebaseio.com\",\n  projectId: \"reactclientpanel-a0811\",\n  storageBucket: \"reactclientpanel-a0811.appspot.com\",\n  messagingSenderId: \"772875141992\"\n};\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n};\n\n// Init firebase instance\nfirebase.initializeApp(firebaseConfig);\n// Init firestore\nfirebase.firestore();\n// No longer need the below settings\n//const settings = { timestampsInSnapshots: true };\n//firestore.settings(settings);\n\n// Add reactReduxFirebase enhancer when making store creator\nconst createStoreWithFirebase = compose(\n  reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\n  reduxFirestore(firebase) // <- needed if using firestore\n)(createStore);\n\n// Add firebase to reducers\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer, // <- needed if using firestore\n  notify: notifyReducer,\n  settings: settingsReducer\n});\n\n// Check settings in local storage\nif (localStorage.getItem(\"settings\") === null) {\n  // Default settings\n  const defaultSettings = {\n    disableBalanceOnAdd: true,\n    disableBalanceOnEdit: false,\n    allowRegistration: false\n  };\n  // Set to local storage\n  localStorage.setItem(\"settings\", JSON.stringify(defaultSettings));\n}\n\n// Create initial state\nconst initialState = { settings: JSON.parse(localStorage.getItem(\"settings\")) };\n\n// Create store\nconst store = createStoreWithFirebase(\n  rootReducer,\n  initialState,\n  compose(\n    reactReduxFirebase(firebase),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","export const NOTIFY_USER = \"NOTIFY_USER\";\nexport const DISABLE_BALANCE_ON_ADD = \"DISABLE_BALANCE_ON_ADD\";\nexport const DISABLE_BALANCE_ON_EDIT = \"DISABLE_BALANCE_ON_EDIT\";\nexport const ALLOW_REGISTRATION = \"ALLOW_REGISTRATION\";\n","import {\n  DISABLE_BALANCE_ON_ADD,\n  DISABLE_BALANCE_ON_EDIT,\n  ALLOW_REGISTRATION\n} from \"../actions/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case DISABLE_BALANCE_ON_ADD:\n      return {\n        ...state,\n        disableBalanceOnAdd: action.payload\n      };\n    case DISABLE_BALANCE_ON_EDIT:\n      return {\n        ...state,\n        disableBalanceOnEdit: action.payload\n      };\n    case ALLOW_REGISTRATION:\n      return {\n        ...state,\n        allowRegistration: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firebaseConnect } from \"react-redux-firebase\";\n//import Settings from \"../settings/Settings\";\n\nclass AppNavBar extends Component {\n  state = {\n    isAuthenticated: false\n  };\n\n  onLogoutClick = e => {\n    e.preventDefault();\n\n    // Handle logout\n    const { firebase } = this.props;\n    const { email, password } = this.props.auth;\n    firebase\n      .logout({\n        email,\n        password\n      })\n      .catch(err => alert(\"Something goes wrong...\"));\n\n    return { isAuthenticated: false };\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const { auth } = props;\n\n    if (auth.uid) {\n      return { isAuthenticated: true };\n    } else {\n      return { isAuthenticated: false };\n    }\n  }\n\n  render() {\n    const { isAuthenticated } = this.state;\n    const { auth } = this.props;\n    const { allowRegistration } = this.props.settings;\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            Client Panel\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarMain\"\n          >\n            <span className=\"navbar-toggler icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarMain\" />\n          <ul className=\"d-flex navbar-nav mr-auto\">\n            {isAuthenticated ? (\n              <li className=\"nav-item\">\n                <Link to=\"/\" className=\"nav-link\">\n                  Dashboard\n                </Link>\n              </li>\n            ) : null}\n          </ul>\n          {isAuthenticated ? (\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <a href=\"#!\" className=\"nav-link\">\n                  {auth.email}\n                </a>{\" \"}\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/settings\" className=\"nav-link\">\n                  Settings\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"#!\" className=\"nav-link\" onClick={this.onLogoutClick}>\n                  Logout\n                </a>{\" \"}\n              </li>\n            </ul>\n          ) : null}\n\n          {allowRegistration && !isAuthenticated ? (\n            <ul className=\"nav navbar-nav\">\n              <li>\n                <Link to=\"/login\" className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/register\" className=\"nav-link\">\n                  Register\n                </Link>\n              </li>\n            </ul>\n          ) : null}\n        </div>\n      </nav>\n    );\n  }\n}\n\nAppNavBar.propTypes = {\n  auth: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect((state, props) => ({\n    auth: state.firebase.auth,\n    settings: state.settings\n  }))\n)(AppNavBar);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport Spinner from \"../layout/Spinner\";\n\nclass Clients extends Component {\n  state = {\n    totalOwed: null\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const { clients } = props;\n    if (clients) {\n      const total = clients.reduce((total, client) => {\n        return total + parseFloat(client.balance.toString());\n      }, 0);\n\n      return { totalOwed: total };\n    }\n    return null;\n  }\n\n  render() {\n    const { clients } = this.props;\n    const { totalOwed } = this.state;\n\n    if (clients) {\n      return (\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <h2>\n                <i className=\"fas fa-users mr-2\" />\n                Clients\n              </h2>\n            </div>\n            <div className=\"col-md-6\">\n              <h5 className=\"text-right text-secondary\">\n                Total Owed{\" \"}\n                <span className=\"text-primary\">\n                  {\" \"}\n                  ${parseFloat(totalOwed).toFixed(2)}\n                </span>\n              </h5>\n            </div>\n          </div>\n\n          <table className=\"table table-striped\">\n            <thead className=\"thead-inverse\">\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Balance</th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {clients.map(client => (\n                <tr key={client.id}>\n                  <td>\n                    {client.firstName} {client.lastName}\n                  </td>\n                  <td>{client.email}</td>\n                  <td>$ {parseFloat(client.balance).toFixed(2)}</td>\n                  <td>\n                    <Link\n                      to={`client/${client.id}`}\n                      className=\"btn btn-secondary btn-sm\"\n                    >\n                      {\" \"}\n                      <i className=\"fas fa-arrow-circle-right\" /> Details{\" \"}\n                    </Link>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      );\n    } else {\n      return <Spinner />;\n    }\n  }\n}\n\nClients.propTypes = {\n  clients: PropTypes.array,\n  firestore: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firestoreConnect([{ collection: \"clients\" }]),\n  connect((state, props) => ({\n    clients: state.firestore.ordered.clients\n  }))\n)(Clients);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Sidebar() {\n  return (\n    <Link to=\"/clients/add\" className=\"btn btn-success btn-block\">\n      <i className=\"fas fa-plus mr-2\" />\n      New\n    </Link>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport Clients from \"../clients/Clients\";\nimport Sidebar from \"./Sidebar\";\n\nfunction Dashboard() {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-10\">\n        <Clients />\n      </div>\n      <div className=\"col-md-2\">\n        <Sidebar />\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\n\nclass AddClient extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    balance: \"\"\n  };\n\n  onChange = e =>\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newClient = this.state;\n    const { firestore, history } = this.props;\n\n    //if balance is null\n    if (newClient.balance === \"\") {\n      newClient.balance = 0;\n    }\n    firestore\n      .add({ collection: \"clients\" }, newClient)\n      .then(() => history.push(\"/\"));\n  };\n\n  render() {\n    const { firstName, lastName, email, phone, balance } = this.state;\n    const { disableBalanceOnAdd } = this.props.settings;\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <Link to=\"/\" className=\"btn btn-link\">\n            <i className=\"fas fa-arrow-circle-left\" /> Back to Dashboard\n          </Link>\n          <div className=\"card\">\n            <div className=\"card-header\">Add Client</div>\n            <div className=\"card-body\">\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"firstName\">First Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"firstName\"\n                    minLength=\"2\"\n                    required\n                    value={firstName}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"lasttName\">Last Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"lastName\"\n                    minLength=\"2\"\n                    required\n                    value={lastName}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    required\n                    value={email}\n                    onChange={this.onChange}\n                  />\n                  <div className=\"form-group\">\n                    <label htmlFor=\"firstName\">Phone</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"phone\"\n                      minLength=\"8\"\n                      required\n                      value={phone}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"balance\">Balance</label>\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      name=\"balance\"\n                      value={balance}\n                      onChange={this.onChange}\n                      disabled={disableBalanceOnAdd}\n                    />\n                  </div>\n                  <input\n                    type=\"submit\"\n                    value=\"Submit\"\n                    className=\"btn btn-primary btn-block\"\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddClient.propTypes = {\n  firestore: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firestoreConnect(),\n  connect((state, props) => ({\n    settings: state.settings\n  }))\n)(AddClient);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport Spinner from \"../layout/Spinner\";\n\nclass EditClient extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    balance: \"\"\n  };\n\n  componentDidMount() {\n    const { client } = this.props;\n    this.setState({\n      firstName: client.firstName,\n      lastName: client.lastName,\n      email: client.email,\n      phone: client.phone,\n      balance: client.balance\n    });\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { client, firestore, history } = this.props;\n\n    const updClient = this.state;\n\n    // Update in edited client in firestore\n    firestore\n      .update({ collection: \"clients\", doc: client.id }, updClient)\n      .then(history.push(\"/\"));\n  };\n\n  render() {\n    const { client } = this.props;\n    const { disableBalanceOnEdit } = this.props.settings;\n    if (client) {\n      return (\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <Link to=\"/\" className=\"btn btn-link\">\n              <i className=\"fas fa-arrow-circle-left\" /> Back to Dashboard\n            </Link>\n            <div className=\"card\">\n              <div className=\"card-header\">Edit Client</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"firstName\"\n                      minLength=\"2\"\n                      required\n                      defaultValue={client.firstName}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"lasttName\">Last Name</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"lastName\"\n                      minLength=\"2\"\n                      required\n                      defaultValue={client.lastName}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      name=\"email\"\n                      required\n                      defaultValue={client.email}\n                      onChange={this.onChange}\n                    />\n                    <div className=\"form-group\">\n                      <label htmlFor=\"firstName\">Phone</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"phone\"\n                        minLength=\"8\"\n                        required\n                        defaultValue={client.phone}\n                        onChange={this.onChange}\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"balance\">Balance</label>\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"balance\"\n                        defaultValue={client.balance}\n                        onChange={this.onChange}\n                        disabled={disableBalanceOnEdit}\n                      />\n                    </div>\n                    <input\n                      type=\"submit\"\n                      value=\"Submit\"\n                      className=\"btn btn-primary btn-block\"\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return <Spinner />;\n    }\n  }\n}\n\nEditClient.propTypes = {\n  firestore: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firestoreConnect(props => [\n    {\n      collection: \"clients\",\n      storeAs: \"client\",\n      doc: props.match.params.id\n    }\n  ]),\n  connect(({ firestore: { ordered }, settings }, props) => ({\n    client: ordered.client && ordered.client[0],\n    settings\n  }))\n)(EditClient);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport Spinner from \"../layout/Spinner\";\nimport classnames from \"classnames\";\n\nclass ClientDetails extends Component {\n  state = {\n    showBalanceForm: false,\n    balanceUpdateAmount: \"\"\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  // Update balance\n  onSubmit = e => {\n    e.preventDefault();\n    const { client, firestore } = this.props;\n    const { balanceUpdateAmount } = this.state;\n\n    const updateClient = {\n      balance: parseFloat(balanceUpdateAmount)\n    };\n\n    firestore.update({ collection: \"clients\", doc: client.id }, updateClient);\n  };\n  // Delete client\n  onDelete = e => {\n    e.preventDefault();\n    const { client, firestore, history } = this.props;\n\n    firestore\n      .delete({ collection: \"clients\", doc: client.id })\n      .then(() => history.push(\"/\"));\n  };\n\n  render() {\n    const { client } = this.props;\n    const { showBalanceForm, balanceUpdateAmount } = this.state;\n    const { disableBalanceOnEdit } = this.props.settings;\n\n    // if display balance form\n    let balanceForm = \"\";\n    if (showBalanceForm) {\n      balanceForm = (\n        <form onSubmit={this.onSubmit}>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={balanceUpdateAmount}\n              name=\"balanceUpdateAmount\"\n              placeholder=\"Add new balance\"\n              onChange={this.onChange}\n              disabled={disableBalanceOnEdit}\n            />\n            <div className=\"input-group-append\">\n              <input\n                type=\"submit\"\n                value=\"Update\"\n                className=\"btn btn-outline-dark\"\n              />\n            </div>\n          </div>\n        </form>\n      );\n    } else {\n      balanceForm = null;\n    }\n\n    if (client) {\n      return (\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <Link to=\"/\" className=\"btn btn-link\">\n                <i className=\"fas fa-arrow-circle-left\" /> Back to dashboard\n              </Link>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"btn-group float-right\">\n                <Link to={`/client/edit/${client.id}`} className=\"btn btn-dark\">\n                  Edit\n                </Link>\n                <button onClick={this.onDelete} className=\"btn btn-danger\">\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n          <hr />\n          <div className=\"card\">\n            <h3 className=\"card-header\">\n              {client.firstName} {client.lastName}\n            </h3>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-md-8 col-sm-6\">\n                  Client ID: <span className=\"text-secondary\">{client.id}</span>\n                </div>\n                <h3 className=\"col-md-4 col-sm-6\">\n                  Balance:{\" \"}\n                  <span\n                    className={classnames({\n                      \"text-danger\": client.balance > 0,\n                      \"text-success\": client.balance === 0\n                    })}\n                  >\n                    ${parseFloat(client.balance).toFixed(2)}\n                  </span>\n                  <a\n                    href=\"#!\"\n                    onClick={() =>\n                      this.setState({\n                        showBalanceForm: !this.state.showBalanceForm\n                      })\n                    }\n                  >\n                    {\" \"}\n                    <i\n                      className=\"fas fa-pencil-alt\"\n                      style={{ color: \"black\", fontSize: \"18px\" }}\n                    />\n                  </a>\n                  {balanceForm}\n                </h3>\n              </div>\n              <hr />\n              <ul className=\"list-group\">\n                <li className=\"list-group-item\">\n                  Contact Email: {client.email}\n                </li>\n                <li className=\"list-group-item\">Phone: {client.phone}</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return <Spinner />;\n    }\n  }\n}\n\nClientDetails.propTypes = {\n  firestore: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firestoreConnect(props => [\n    {\n      collection: \"clients\",\n      storeAs: \"client\",\n      doc: props.match.params.id\n    }\n  ]),\n  connect(({ firestore: { ordered }, settings }, props) => ({\n    client: ordered.client && ordered.client[0],\n    settings\n  }))\n)(ClientDetails);\n","import { NOTIFY_USER } from \"./types\";\n\nexport const notifyUser = (message, messageType) => {\n  return {\n    type: NOTIFY_USER,\n    message,\n    messageType\n  };\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst Alert = props => {\n  const { message, messageType } = props;\n  return (\n    <div\n      className={classnames(\"alert\", {\n        \"alert-success\": messageType === \"success\",\n        \"alert-danger\": messageType === \"error\"\n      })}\n    >\n      {message}\n    </div>\n  );\n};\n\nAlert.propTypes = {\n  message: PropTypes.string.isRequired,\n  messageType: PropTypes.string.isRequired\n};\n\nexport default Alert;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport { notifyUser } from \"../../actions/notifyActions\";\nimport Alert from \"../layout/Alert\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  login = e => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n    const { firebase, notifyUser } = this.props;\n\n    firebase\n      .login({\n        email,\n        password\n      })\n\n      .catch(err => notifyUser(\"Invalid login credentials\", \"error\"));\n  };\n\n  render() {\n    const { message, messageType } = this.props.notify;\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 mx-auto\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              {message ? (\n                <Alert message={message} messageType={messageType} />\n              ) : null}\n              <h1 className=\"text-center pb-4 pt-3\">\n                <span className=\"text-primary\">\n                  <i className=\"fas fa-lock\" /> Login\n                </span>\n              </h1>\n              <form onSubmit={this.login}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    required\n                    value={this.state.email}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    required\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Login\"\n                  className=\"btn btn-block btn-primary\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  firebase: PropTypes.object.isRequired,\n  notify: PropTypes.object.isRequired,\n  notifyUser: PropTypes.func.isRequired\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(\n    (state, props) => ({\n      notify: state.notify\n    }),\n    { notifyUser }\n  )\n)(Login);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  setDisableBalanceOnAdd,\n  setDisableBalanceOnEdit,\n  setAllowRegistration\n} from \"../../actions/settingActions\";\n\nclass Settings extends Component {\n  disableBalanceOnAddChange = () => {\n    const { setDisableBalanceOnAdd } = this.props;\n    setDisableBalanceOnAdd();\n  };\n\n  disableBalanceOnEditChange = () => {\n    const { setDisableBalanceOnEdit } = this.props;\n    setDisableBalanceOnEdit();\n  };\n\n  allowRegistrationChange = () => {\n    const { setAllowRegistration } = this.props;\n    setAllowRegistration();\n  };\n\n  render() {\n    const {\n      disableBalanceOnAdd,\n      disableBalanceOnEdit,\n      allowRegistration\n    } = this.props.settings;\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <Link to=\"/\" className=\"btn btn-link\">\n              <i className=\"fas fa-arrow-circle-left\"> Back to dashboard</i>\n            </Link>\n          </div>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-header\">Edit Settings</div>\n          <div className=\"card-body\">\n            <form>\n              <div className=\"form-group\">\n                <label>Allow Registration</label>{\" \"}\n                <input\n                  type=\"checkbox\"\n                  name=\"allowRegistration\"\n                  checked={!!allowRegistration}\n                  onChange={this.allowRegistrationChange}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Disable Balance on Add</label>{\" \"}\n                <input\n                  type=\"checkbox\"\n                  name=\"disableBalanceOnAdd\"\n                  checked={!!disableBalanceOnAdd}\n                  onChange={this.disableBalanceOnAddChange}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Disable Balance on Edit</label>{\" \"}\n                <input\n                  type=\"checkbox\"\n                  name=\"disableBalanceOnEdit\"\n                  checked={!!disableBalanceOnEdit}\n                  onChange={this.disableBalanceOnEditChange}\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSettings.propTypes = {\n  settings: PropTypes.object.isRequired,\n  setDisableBalanceOnAdd: PropTypes.func.isRequired,\n  setDisableBalanceOnEdit: PropTypes.func.isRequired,\n  setAllowRegistration: PropTypes.func.isRequired\n};\n\nexport default connect(\n  (state, props) => ({\n    auth: state.firebase.auth,\n    settings: state.settings\n  }),\n  { setDisableBalanceOnAdd, setDisableBalanceOnEdit, setAllowRegistration }\n)(Settings);\n","import {\n  DISABLE_BALANCE_ON_ADD,\n  DISABLE_BALANCE_ON_EDIT,\n  ALLOW_REGISTRATION\n} from \"./types\";\n\nexport const setDisableBalanceOnAdd = () => {\n  // Get settings from local storage\n  const settings = JSON.parse(localStorage.getItem(\"settings\"));\n\n  // Toggle\n  settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd;\n\n  // Update local storage\n  localStorage.setItem(\"settings\", JSON.stringify(settings));\n\n  return {\n    type: DISABLE_BALANCE_ON_ADD,\n    payload: settings.disableBalanceOnAdd\n  };\n};\n\nexport const setDisableBalanceOnEdit = () => {\n  // Get settings from local storage\n  const settings = JSON.parse(localStorage.getItem(\"settings\"));\n\n  // Toggle\n  settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit;\n\n  // Update local storage\n  localStorage.setItem(\"settings\", JSON.stringify(settings));\n  return {\n    type: DISABLE_BALANCE_ON_EDIT,\n    payload: settings.disableBalanceOnEdit\n  };\n};\n\nexport const setAllowRegistration = () => {\n  // Get settings from local storage\n  const settings = JSON.parse(localStorage.getItem(\"settings\"));\n\n  // Toggle\n  settings.allowRegistration = !settings.allowRegistration;\n\n  // Update local storage\n  localStorage.setItem(\"settings\", JSON.stringify(settings));\n  return {\n    type: ALLOW_REGISTRATION,\n    payload: settings.allowRegistration\n  };\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport { notifyUser } from \"../../actions/notifyActions\";\nimport Alert from \"../layout/Alert\";\n\nclass Register extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  componentWillMount() {\n    const { allowRegistration } = this.props.settings;\n\n    // Check if allow registration in settings\n    if (!allowRegistration) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n    const { firebase, notifyUser } = this.props;\n\n    // Register with firebase\n    firebase\n      .createUser({ email, password })\n      .catch(err => notifyUser(\"That user already exists\", \"error\"));\n  };\n\n  render() {\n    const { message, messageType } = this.props.notify;\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 mx-auto\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              {message ? (\n                <Alert message={message} messageType={messageType} />\n              ) : null}\n              <h1 className=\"text-center pb-4 pt-3\">\n                <span className=\"text-primary\">\n                  <i className=\"fas fa-lock\" /> Register\n                </span>\n              </h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    required\n                    value={this.state.email}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    required\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Sign up\"\n                  className=\"btn btn-block btn-primary\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  firebase: PropTypes.object.isRequired,\n  notify: PropTypes.object.isRequired,\n  notifyUser: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(\n    (state, props) => ({\n      notify: state.notify,\n      settings: state.settings\n    }),\n    { notifyUser }\n  )\n)(Register);\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { UserIsAuthenticated, UserIsNotAuthenticated } from \"./helper/Auth\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport AppNavBar from \"./components/layout/AppNavBar\";\nimport Dashboard from \"./components/layout/Dashboard\";\nimport AddClient from \"./components/clients/AddClient\";\nimport EditClient from \"./components/clients/EditClient\";\nimport ClientDetails from \"./components/clients/ClientDetails\";\nimport Login from \"./components/auth/Login\";\nimport Settings from \"./components/settings/Settings\";\nimport Register from \"./components/auth/Register\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router basename=\"/\">\n          <div className=\"App\">\n            <AppNavBar />\n            <div className=\"container\">\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  component={UserIsAuthenticated(Dashboard)}\n                />\n                <Route\n                  exact\n                  path=\"/clients/add\"\n                  component={UserIsAuthenticated(AddClient)}\n                />\n                <Route\n                  exact\n                  path=\"/client/edit/:id\"\n                  component={UserIsAuthenticated(EditClient)}\n                />\n                <Route\n                  exact\n                  path=\"/client/:id\"\n                  component={UserIsAuthenticated(ClientDetails)}\n                />\n                <Route\n                  exact\n                  path=\"/login\"\n                  component={UserIsNotAuthenticated(Login)}\n                />\n                <Route\n                  exact\n                  path=\"/register\"\n                  component={UserIsNotAuthenticated(Register)}\n                />\n                <Route\n                  exact\n                  path=\"/settings\"\n                  component={UserIsAuthenticated(Settings)}\n                />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}