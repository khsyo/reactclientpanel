{"ast":null,"code":"import { createStore, combineReducers, compose } from \"redux\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport { reactReduxFirebase, firebaseReducer } from \"react-redux-firebase\";\nimport { reduxFirestore, firestoreReducer } from \"redux-firestore\"; // Reducers\n\nimport notifyReducer from \"./reducers/notifyReducer\";\nimport settingsReducer from \"./reducers/settingsReducer\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBnEUQwd3x548XHOp964d-Ea-V5oHYHzEc\",\n  authDomain: \"reactclientpanel-a0811.firebaseapp.com\",\n  databaseURL: \"https://reactclientpanel-a0811.firebaseio.com\",\n  projectId: \"reactclientpanel-a0811\",\n  storageBucket: \"reactclientpanel-a0811.appspot.com\",\n  messagingSenderId: \"772875141992\"\n}; // react-redux-firebase config\n\nvar rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n\n}; // Init firebase instance\n\nfirebase.initializeApp(firebaseConfig); // Init firestore\n\nvar firestore = firebase.firestore(); // No longer need the below settings\n//const settings = { timestampsInSnapshots: true };\n//firestore.settings(settings);\n// Add reactReduxFirebase enhancer when making store creator\n\nvar createStoreWithFirebase = compose(reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\nreduxFirestore(firebase) // <- needed if using firestore\n)(createStore); // Add firebase to reducers\n\nvar rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n  // <- needed if using firestore\n  notify: notifyReducer,\n  settings: settingsReducer\n}); // Create initial state\n\nvar initialState = {}; // Create store\n\nvar store = createStoreWithFirebase(rootReducer, initialState, compose(reactReduxFirebase(firebase), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nexport default store;","map":{"version":3,"sources":["/Users/HeSong/Desktop/react_clientpanel/src/store.js"],"names":["createStore","combineReducers","compose","firebase","reactReduxFirebase","firebaseReducer","reduxFirestore","firestoreReducer","notifyReducer","settingsReducer","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","rrfConfig","userProfile","useFirestoreForProfile","initializeApp","firestore","createStoreWithFirebase","rootReducer","notify","settings","initialState","store","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,sBAApD;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,iBAAjD,C,CACA;;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,wCAFS;AAGrBC,EAAAA,WAAW,EAAE,+CAHQ;AAIrBC,EAAAA,SAAS,EAAE,wBAJU;AAKrBC,EAAAA,aAAa,EAAE,oCALM;AAMrBC,EAAAA,iBAAiB,EAAE;AANE,CAAvB,C,CASA;;AACA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,OADG;AAEhBC,EAAAA,sBAAsB,EAAE,IAFR,CAEa;;AAFb,CAAlB,C,CAKA;;AACAhB,QAAQ,CAACiB,aAAT,CAAuBV,cAAvB,E,CACA;;AACA,IAAMW,SAAS,GAAGlB,QAAQ,CAACkB,SAAT,EAAlB,C,CACA;AACA;AACA;AAEA;;AACA,IAAMC,uBAAuB,GAAGpB,OAAO,CACrCE,kBAAkB,CAACD,QAAD,EAAWc,SAAX,CADmB,EACI;AACzCX,cAAc,CAACH,QAAD,CAFuB,CAEZ;AAFY,CAAP,CAG9BH,WAH8B,CAAhC,C,CAKA;;AACA,IAAMuB,WAAW,GAAGtB,eAAe,CAAC;AAClCE,EAAAA,QAAQ,EAAEE,eADwB;AAElCgB,EAAAA,SAAS,EAAEd,gBAFuB;AAEL;AAC7BiB,EAAAA,MAAM,EAAEhB,aAH0B;AAIlCiB,EAAAA,QAAQ,EAAEhB;AAJwB,CAAD,CAAnC,C,CAOA;;AACA,IAAMiB,YAAY,GAAG,EAArB,C,CAEA;;AACA,IAAMC,KAAK,GAAGL,uBAAuB,CACnCC,WADmC,EAEnCG,YAFmC,EAGnCxB,OAAO,CACLE,kBAAkB,CAACD,QAAD,CADb,EAELyB,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFlC,CAH4B,CAArC;AASA,eAAeF,KAAf","sourcesContent":["import { createStore, combineReducers, compose } from \"redux\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport { reactReduxFirebase, firebaseReducer } from \"react-redux-firebase\";\nimport { reduxFirestore, firestoreReducer } from \"redux-firestore\";\n// Reducers\nimport notifyReducer from \"./reducers/notifyReducer\";\nimport settingsReducer from \"./reducers/settingsReducer\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBnEUQwd3x548XHOp964d-Ea-V5oHYHzEc\",\n  authDomain: \"reactclientpanel-a0811.firebaseapp.com\",\n  databaseURL: \"https://reactclientpanel-a0811.firebaseio.com\",\n  projectId: \"reactclientpanel-a0811\",\n  storageBucket: \"reactclientpanel-a0811.appspot.com\",\n  messagingSenderId: \"772875141992\"\n};\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n};\n\n// Init firebase instance\nfirebase.initializeApp(firebaseConfig);\n// Init firestore\nconst firestore = firebase.firestore();\n// No longer need the below settings\n//const settings = { timestampsInSnapshots: true };\n//firestore.settings(settings);\n\n// Add reactReduxFirebase enhancer when making store creator\nconst createStoreWithFirebase = compose(\n  reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\n  reduxFirestore(firebase) // <- needed if using firestore\n)(createStore);\n\n// Add firebase to reducers\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer, // <- needed if using firestore\n  notify: notifyReducer,\n  settings: settingsReducer\n});\n\n// Create initial state\nconst initialState = {};\n\n// Create store\nconst store = createStoreWithFirebase(\n  rootReducer,\n  initialState,\n  compose(\n    reactReduxFirebase(firebase),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}