{"ast":null,"code":"import _classCallCheck from \"/Users/HeSong/Desktop/react_clientpanel/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/HeSong/Desktop/react_clientpanel/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/HeSong/Desktop/react_clientpanel/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/HeSong/Desktop/react_clientpanel/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/HeSong/Desktop/react_clientpanel/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/HeSong/Desktop/react_clientpanel/src/components/clients/EditClient.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport Spinner from \"../layout/Spinner\";\n\nvar EditClient =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditClient, _Component);\n\n  function EditClient() {\n    _classCallCheck(this, EditClient);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EditClient).apply(this, arguments));\n  }\n\n  _createClass(EditClient, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"edit client!\"));\n    }\n  }]);\n\n  return EditClient;\n}(Component);\n\nEditClient.propTypes = {\n  firestore: PropTypes.object.isRequired\n};\nexport default compose(firestoreConnect(function (props) {\n  return [{\n    collection: \"clients\",\n    storeAs: \"client\",\n    doc: props.match.params.id\n  }];\n}), connect(function (_ref, props) {\n  var ordered = _ref.firestore.ordered;\n  return {\n    client: ordered.client && ordered.client[0]\n  };\n}))(EditClient);","map":{"version":3,"sources":["/Users/HeSong/Desktop/react_clientpanel/src/components/clients/EditClient.js"],"names":["React","Component","Link","PropTypes","compose","connect","firestoreConnect","Spinner","EditClient","propTypes","firestore","object","isRequired","props","collection","storeAs","doc","match","params","id","ordered","client"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;IAEMC,U;;;;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF;AAKD;;;;EAPsBP,S;;AAUzBO,UAAU,CAACC,SAAX,GAAuB;AACrBC,EAAAA,SAAS,EAAEP,SAAS,CAACQ,MAAV,CAAiBC;AADP,CAAvB;AAIA,eAAeR,OAAO,CACpBE,gBAAgB,CAAC,UAAAO,KAAK;AAAA,SAAI,CACxB;AACEC,IAAAA,UAAU,EAAE,SADd;AAEEC,IAAAA,OAAO,EAAE,QAFX;AAGEC,IAAAA,GAAG,EAAEH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC;AAH1B,GADwB,CAAJ;AAAA,CAAN,CADI,EAQpBd,OAAO,CAAC,gBAA6BQ,KAA7B;AAAA,MAAgBO,OAAhB,QAAGV,SAAH,CAAgBU,OAAhB;AAAA,SAAwC;AAC9CC,IAAAA,MAAM,EAAED,OAAO,CAACC,MAAR,IAAkBD,OAAO,CAACC,MAAR,CAAe,CAAf;AADoB,GAAxC;AAAA,CAAD,CARa,CAAP,CAWbb,UAXa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport Spinner from \"../layout/Spinner\";\n\nclass EditClient extends Component {\n  render() {\n    return (\n      <div>\n        <h1>edit client!</h1>\n      </div>\n    );\n  }\n}\n\nEditClient.propTypes = {\n  firestore: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firestoreConnect(props => [\n    {\n      collection: \"clients\",\n      storeAs: \"client\",\n      doc: props.match.params.id\n    }\n  ]),\n  connect(({ firestore: { ordered } }, props) => ({\n    client: ordered.client && ordered.client[0]\n  }))\n)(EditClient);\n"]},"metadata":{},"sourceType":"module"}